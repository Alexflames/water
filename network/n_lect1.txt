Поздняков Валерий Александрович

Книги
1. Олифер "Компьютерные сети"
2. Таненбаум "Компьютерные сети"
3. Программа сетевой академии CISCO 1,2,3,4
4. Уэндел Одом CCENT/CCNA

Программа Cisco Packet Tracer
на сайте netacad.com

              История развития вычислительной техники
  Первые выч. устройство появилось еще несколько тысячелетий назад.
  До 20 века использовали счёты

  В средние века появляется первое выч. устройство, схожее с компьютером - 
башенные механические часы
  Схожесть с комьютером в центральном элементе. У компьютера - процессор, 
вырабатывающий тактовый импульс, синхронно с которым работают остальные блоки 
компьютера.
  У часов тоже синхронизировано короче.

  Далее механический калькулятор Блеза Паскаля, сложение и вычитание
  Калькулятор Лейбница мог умножать. 
  Была придумана двоичная СС, но применения не было до появления первой ЭВМ
в 20 веке
  В 19 веке проект первого механич. компьютера - Чарльз Бэббидж
  2 блока, дословно:
  1) Склад
  2) Мельница  

  Перфоленты

              Представление данных в механических машинах
  Поскольку за представление данных в машинах отвечают мех. элементы, из которых
она состоит и на базе которых построена, то ...
  
  Развитие вычислительных машин постоянно сталкивалось с ограничениями. 
  Велись постоянные разработки новых машин, особенно в годы войны. Прорывом
стало появление электронных (вместо механических и электронно-механические)
машин. И элементы которых вместо принятия определенного положения принимают
определенные состояния

  Рассмотрим хранение данных в современной память современной памяти компьютера

  ОЗУ - конденсаторы, ток в одном и другом направлении (2 состояния 0 или 1) 
+ без тока, разряженный (-)
  Конденсаторы энергозависимы, в отсутствии её они теряют информацию. 
  Оперативная память требует постоянной регенерации

  Жесткий диск - набор закрепленных пластин, имеющих 2 рабочие поверхности.
  Каждая рабочая пластина имеют головку чтения-записи

  Рабочая поверхность состоит из дорожек, разбитых на сектора
  Несколько десятков секторов подряд идущих образуют ячейку памяти жесткого
диска, называемой "кластер". У кластера как и у любой ячейки памяти имеется память.
Кластер называют минимально адресуемой ячейкой памяти жесткого диска
  
  При форматировании любого носителя можно выбрать размер кластера. При выборе
кластера меньшего размера экономится свободное место. Выбор кластера большего размера
увеличивается время чтения-записи внешнего носителя
  Файловая система FAT32 не может хранить файлы больше 4 гб
  Лучше выбрать NTFS

  Это было представление информации в электронном виде с помощью двоичного кода

                    Представление информации
  Информация - продукт взаимодействия данных и адекватных методов.
  Данные - зарегистрированные сигналы. Данные несут в себе информацию, 
но не являются ею.
  Чтобы извлечь её нужно обработать с помощью соответствующего метода.
  Пример - звуковой сигнал. Иностранная речь, метод - знание иностранного языка.

  Информация делится на аналоговую и дискретную
  Признак дискретности данных - конечное количество значений или состояний
информационного параметра сигнала, которые мы регистрируем, которые можно
подсчитать и пронумеровать

                  Передача данных по каналам связи
  Информация по каналом связи передается с помощью модуляции несущего сигнала.
  Несущий сигнал - синусоидальный электромагнитный сигнал, несущий информацию
  Модуляция - процесс изменения сигнала ...
  
  Модуляция бывает по амплитуде, частоте, ..

  Рассмотрим по амплитуде. Аналоговую модуляцию отличает то что изменение 
информационного параметра в её процессе происходит непрерывно а значит нельзя
говорить о конечном кол-ве значений информационного параметра. Кол-во значений
будет (или является) бесконечно большим
  В случае дискретного количество дискретней уровней ограничено. 
Сигнал не обязательно должен принимать все значения. Кол-во уровней = кол-во
максимального кол-ва уровней которые может принимать
  При кол-ве уровней M = 2 состояния могут быть 0 и 1
  При дискретной модуляции инф-ия передается тактированно/по истечению опред.
периода времени(такта) повторно замеряется информационный парамер сигнала
  Количество бодов в секунду - состояний в такт
  В случае M = 2, кол-во бодов в секунду = кол-во битов в секунду
  При M = 4 1: 00, 2: 01, 3: 10, 4: 11. Информационная скорость увеличится в 2 раза.
  Каждый такт 0,25 сек

  Классификация компьютерных сетей
  LAN, MAN, WAN

  Первые сети были локальными: занимали 1 комнату, этаж, здание
  Такие сети принадлежали одной организации
    LAN: Local Area Network 
  В дальнейшем появилась необходимость в обмене информации между разными организациями,
  разными локальными сетями

  Распределенные сети WAN
  Состоит из несколько локальных сетей

  Первые распределенные сети были в рамках городов, и они назывались
  MAN (Metropolitan Area Network)

  Сети, объединяющие сети городов/стран - глобальные сети

  Для построения комп. сетей используются сетевые устройства.

  Обзор сетевых устройств. 
  1) Повторитель (Repeater) - двухпортовое устройство, усиливающее принятый на 
  первый порт сигнал и передает его на второй порт. Используется там где длина кабеля связи превышает или должна превысить максимально используемый. 
  Максимально допустимая длина кабеля обусловлена затуханием сигнала в нем. 
  Repeater работает на первом уровне сетевой модели
  2) Концентратор (Hub) - многопортовый повторитель. 
  Работает на первом физическом уровне сетевой модели
  Принимает с одного и передает сигнал на все остальные порты. Может включать несколько десятков портов. Предназначен для объединения конечных узлов локальной сети.
  Hub не умеет определять получателя по адресу.
  Когда на hub одновременно поступают 2 или более сообщения, у него происходит коллизия, которая обусловлена тем, что в канале связи в один и тот же момент времени в одной точке НЕ может существовать 2 или более сообщения
  В данном случае хаб отбрасывает сообщение, вступившее в коллизию, потом посылает участникам коллизии (отправителям) сообщение о том, что произошла коллизия.
  Потом участники коллизия независимо друг от друга формируют свое время задержки с целью исключить в дальнейшем одновременную отправку этих же сообщений
  По истечению случайного времени задержки каждый отправитель повторно отправляет эти значения. Поскольку это будет не одновременно коллизия не произойдет

  Хаб может единовременно обрабатывать не более 1 сообщения
  Сети, работающие на хабе очень медленнее. Потому что чем больше узлов сети, тем чаще будет возникать коллизия на хабе

  Поскольку хаб не умеет вычислять адрес сети, и сообщения посылаются всем участникам сети, то каждый узел будет тратить машинное время на обработку сообщения, которое адресовано не ему. Чем больше узлов сети, тем больше таких сообщений у каждого узла, что субъективно существенно замедляет работу сети

  Мост - устройство, которое работает на 2 уровне сетевой модели. Включает в себя функции и первого уровня
  Второй уровень включает в себя работу с физическими адресами сети (MAC-адресами).
  Это значит что мост умеет определять получателя по MAC-адресу

  Логика работы моста строится на таблице коммутации. Таблица сопоставляет MAC-адрес устройство и интерфейс моста, через которое это устройство доступно

  4-е устройство:
  Коммутатор

  Обладает большей производительностью для построения локальных сетей чем на хабе. В отличии от хаба работает на втором уровне локальной сети, умеет определять получателя по MAC-адресу

  Работа основана на таблице коммутации как и у моста
  Таблица коммутации заполняется по мере поступления на неё сообщения. Первая запись в таблице делается на основании первого полученного сообщения. В заголовке сообщения содержится MAC-адрес получателя и отправителя.

  Для последующих сообщений ищет в таблице коммутации отправителя. Если находит, отправляет сообщение на порт, указанный в записи. Если не находит, отправляет на все порты кроме того, через который получил сообщение 

  Быстрее хаба так как умеет отличать получателей по адресу, и второе - имеет буфер памяти

  Коммутатор имеет единовременно обрабатывать более одного сообщения

  5. Маршрутизатор
  В отличии от остальных устройств предназначен для объединения локальных сетей в распределенных. Его функция
  и задача заключается в доставке сообщения в нужную локальную сеть. 
  Попав в нужную локальную сеть, сообщение доставляется коммутатором.
  Маршрутизатор работает на 3 уровне сетевой модели - сетевой. Включает в себя функции первых трех уровней сетевой модели. 

Таблица маршрутизатора состоит из несколько столбцов/графов:
  Первая графа: Адрес сети или подсети назначения
  Вторая: маска сети/подсети
  Третья - исходящий интерфейс - указывается через сокращение его спецификации, 
    которое может иметь одно из следующих значений:
      Ethernet - 10 мбит/с, FastEthernet - 100 Мбит/с, Gigabit Ethernet - 1000 Мбит/с
    и номер интерфейса, например: Eth1, Fa0

  Четвертый - маршрутизатор следующего перехода, адрес следующего маршрутизатора
  до сети назначения (Next Hop)
  Если сеть подключена напрямую, то в графе ничего не указывается

  5. Метрика - кол-во маршрутизаторов в сети назначения до текущей

  Интерфейс роутера, к которому подключена LAN, называется шлюзом, как и сам роутер
 
  Посколько сеть может быть сложной, возникает потребность выбрать кратчайший путь. 
  Критерий выбора - метрика маршрута, указывается через количество маршрутизаторов к сети назначения

  Если для создания локальной сети (LAN) используются хабы и коммутаторы, то
  для объединения локальной сети в распределенную сеть используются маршрутизаторы (router)
   LAN1          LAN2
192.168.1.0   192.168.2.0
   o    o      o    o
    \  /        \  /
     [] ---<>--- []
    /  \        /  \
   o    o      o    o
192.168.1.1 -   192.168.2.1 -
192.168.1.254   192.168.2.254

Старший и младший адрес
Старший для названия интерфейса роутера
Младший для 
Маска для получения адреса сети с помощью логической операции *И*
Остальные адреса хостов в диапазоне можно назначать компьютерам и другим 
устройствам в локальной сети

  Распределенную сеть нужно сконфигурировать, для этого нужно локальным сетям сопоставить адрес

  Задача:
  Составить таблицу маршрутизации для

  192.168.1.0 
       ^--------[R1]---192.168.2.0---[R2]----192.168.3.0
                 ^                    ^
            192.168.2.1          192.168.2.2

R1
------------------------------------------------------------------
Адрес сети/   | Маска        |        | Маршрутизатор |          |
подсети       |              | Спец.  | следующего    | метрика  |
назначения    |              |        | перехода      |          |
------------------------------------------------------------------
192.168.1.0   |255.255.255.0 |  Fa0   |       -       |     1    |
------------------------------------------------------------------
192.168.2.0   |255.255.255.0 |  Fa1   |       -       |     1    |
------------------------------------------------------------------
192.168.3.0   |255.255.255.0 |  Fa1   |  192.168.2.2  |     2    |
------------------------------------------------------------------

R2
------------------------------------------------------------------
Адрес сети/   | Маска        |        | Маршрутизатор |          |
подсети       |              | Спец.  | следующего    | метрика  |
назначения    |              |        | перехода      |          |
------------------------------------------------------------------
192.168.1.0   |255.255.255.0 |  Fa0   |  192.168.2.1  |     2    |
------------------------------------------------------------------
192.168.2.0   |255.255.255.0 |  Fa0   |       -       |     1    |
------------------------------------------------------------------
192.168.3.0   |255.255.255.0 |  Fa1   |       -       |     1    |
------------------------------------------------------------------

Задача роутера заключается в том, чтобы доставить сообщение в определенную
локальную сеть (НЕ УЗЛУ!), где задачу доставки сообщения до определенного узла
возьмет на себя коммутатор

Лекция № <Apple>

Сетевая модель OSI, принцип передачи в компьютерных сетях,
ARP, RIP протоколы

Уровни сетевой модели:
7. Приложений     \
6. Представления  | Непрерывный информационный поток данных
5. Сеансовый      /
4. Транспортный  \
3. Сетевой        | Уровни транспортировки данных, на которых сообщения уже
2. Канальный      | делятся на дискретные структуры данных. 
1. Физический    /  Известны 3 дискретные структуры данных: 
                    сегменты, пакеты, кадры

Все 7 уровней сетевой модели представлены на конечных узлах, как правило,
персональных компьютерах
Отправление сообщения с конечного узла сопряжено с его пошаговой обработкой
Начиная с 7 уровня и заканчивая первым. 
Такая обработка называется инкапсуляцией. Процесс инкапсуляции характерен только
для узлов-отправителей
Примеры протоколов сетевых приложений: HTTP, POP3, SMTP 
Результаты обработки передаются на низлежащие уровни

Уровни представления отвечают за преобразование данных к виду,
пригодному для передачи в компьютерных сетях. Также уровень представления 
отвечает за шифрование данных по одному из протоколов шифрования.
Данные обработки передаются на низлежаший 5  уровень

Сеансовый отвечает за синхронизацию сеанса связи между отправителем и получателем

На следующем, 4 уровне, непрерывный информационный поток сообщения начинает 
делиться на дискретные структуры данных. 
Сегмент состоит из данных и заголовка, в который заносится служебная информация,
необходимая для доставки данных до узла назначения. В частности, в заголовок 
заносятся адрес отправителя и адрес получателя. Используются номера портов.
Под номер порта отводится 16 бит памяти. 16 битов - 2^16 значений: номер порта
в диапазоне 0 - 65535. Номер порта идентифицирует сетевой процесс .. и может 
открыть или закрыть. Если открыт - сегмент -> сетевому приложению, если закрыт 
-> отбрасывается
Будучи сформированным, сегмент передается на близлежащий сетевой уровень, где
сформировывается в пакет путем добавления нового заголовка. 
В качестве адресов на сетевом уровне используются IP-адреса
IP-адрес идентифицирует узел в пределах распределенной WAN-сети

Будучи сформированным, пакет передается на близлежащий канальный уровень, где
упаковывается в новую дискретную структуру "кадр" путем добавления нового 
заголовка

В качестве адресов на канальном уровне используются физические- или MAC-адреса 
MAC-адреса идентифицируют узел в пределах локальной LAN-сети. Если сообщение
проходит через маршрутизатор (то есть шлюз), то MAC-адрес сети будет новый, а
IP-адрес прежний

Будучи сформированным, кадр отправляется на физический уровень, где ... в виде
промоделированного сигнала. Получатель будет являться или представлять собой 
ту же самую семиуровневую сетевую модель и получит сигнал на первом физическом 
уровне, сформирует из него исходные биты, затем исходный кадр и передаст его 
на вышележащий канальный уровень, на котором сверит mac-адрес назначения кадра с 
собственным mac-адресом и широковещательным. В случае совпадения извлечет из 
кадра пакет и передаст на вышележащие уровни, в противном случае кадр будет 
отброшен.
На сетевой уровне адрес назначения пакета будет сравнен с собственным адресом и 
широковещательным. В случае совпадения из пакета будет извлечен сегмент и передан 
на вышележащем уровне для дальнейшей обработки, в противном случае пакет будет
отброшен
На 4, транспортном, уровне, номер порта назначения сегмента будет сверен с таким
же номером порта у получателя. Если схожий номер порта у получателя открыт, то 
сегмент передается сетевому приложению. В противном случае отбрасывается
Все полученные сегменты будут проставлены в исходном порядке 
(Прим. порядок сегмента отмечается в его заголовке) и склеены в исходный 
информационный поток. Результат будет передан на вышележащий сеансовый уровень.
Сеансовый уровень передает на вышележащий уровень представления, производит 
дешифрование если отправитель осуществлял шифрование. Результаты уровня 
представления передаются на уровень приложения, на котором происходит обработка
сообщения с помощью одного из протоколов сетевого приложения.
В результате получаем исходное сообщение.

Логический канал связи (описано выше) имеет следующий смысл:
На каждом уровне получаем сообщение/структуру данных в том виде, в котором оно
было у отправителя на том же уровне

У получателя процесс обратной обработки сообщения называется "деинкапсуляция"

ARP-протокол. Когда отправитель в процессе инкапсуляции передает сформированный 
пакет на канальном уровне, где пытается упаковать его в кадр, ему понадобится 
MAC-адрес назначения данного кадра.
Если получатель будет лежать в той же локальной сети что и отправитель, то нам
потребуется определить ЕГО MAC-адрес по его IP-адресу, который записан в заголовке пакета
Если же получатель будет лежать в удаленной локальной сети, которая доступна
через шлюз (роутер), то будем определять MAC-адрес не получателя, а ближайшего
роутера (шлюза) по его IP-адресу, который должен быть известен каждому узлу в 
локальной сети
Это условие задачи ARP-протокола. Чтобы решить данную задачу, проще говоря, 
задачу определения MAC-адреса по известному IP-адресу, отправитель организует 
запрос по ограниченному широковещательному IP-адресу (255.255.255.255)
В котором:
"Каждому узлу локальной сети: если IP-адрес равен тому что в запросе,
сообщи свой MAC-адрес"
Пакет с данным запросом, который формируется на сетевом уровне и который
содержит в заголовке ограниченный широковещательный IP-адрес, упаковывается в 
кадр, в заголовок которого помещается ограниченный широковещательный IP-адрес,
буква F.
Затем данный кадр запроса отправляется в локальную сеть и коммутатором доставляется
до каждого узла в локальной сети.
Получатель сообщит свой MAC-адрес ответным сообщением в заголовках которого в
качестве MAC-адреса назначения и IP-адреса назначения будут помещены MAC-адрес
отправителя запроса и IP-адрес отправителя запроса. Все эти данные присутствуют
в заголовках служебной информации. 
Затем отправитель запроса получив MAC-адрес помещает его в свой кэш, а именно
в ARP-таблицу (Содержит записи, которые сопоставляют IP и MAC-адреса узлов
в текущей локальной сети) затем наш узел может сформировать кадр с учетом 
MAC-адреса и отправить его получателю. Все дальнейшие кадры будут формироваться
без помощи ARP-протокола с использованием ARP-таблицы 
(Прим. ARP-таблица в ARP-протоколе играет роль кэша).
Данные в ARP-таблицу могут вноситься вручную. Если администратор допустил ошибку
в написании MAC-адреса в таблице и попытается проверить доступность узла по его
IP-адресу с помощью утилиты -ping.

В данном случае узел сначала обратится в кэш для получения MAC-адреса. 
Критерием поиска будет IP-адрес. Поскольку IP указан верно, наш узел найдет
по нему запись с неверным MAC-адресом и использует его для формирования кадра.
Данный кадр будет отправлен коммутатору. Он по своей таблице коммутации будет
искать запись с таким MAC-адресом и не найдет её. 
Чтобы доставить такое выполняется широковещательная рассылка сообщения. На
всех узлах будет выброс кадра. Кадр будет отброшен на канальном уровне у 
получателя из-за несовпадения MAC-адреса

Ситуация 2:
Админ в ARP-таблице допускает ошибку в написании MAC-адреса и IP-адреса после
чего проверяет доступность узла с помощью утилиты ping по его правильному IP-адрес.
Узел будет доступен по следующей причине: критерием поиска в ARP-таблице явл-ся
IP-адрес и поскольку он там указан неверно, то данную запись не найдем, а значит
наш узел обратится к ARP-протоколу для определения MAC-адреса и самостоятельно 
после данного определения сделает запись в ARP-таблице, после чего узел будет
доступен

RIP-протокол
Первоначальная настройка маршрутизатора, с помощью которой формируется начальная
таблица маршрутизации с информацией о напрямую подключенных сетях
С использованием следующих команд:
  enable 
  configure terminal
  interface fa0/0
  ip address 192.168.1.1 255.255.255.255
  no shutdown
  interface fa0/1
  ip address 192.168.2.1 255.255.255.255
  no shutdown
  
Затем необходимо настроить протокол маршрутизации на роутере. 
  exit
  router rip             // настраиваем протокол
  version 2 
  network 192.168.1.0    // перечисляем сети
  network 192.168.2.0    
  exit

Настроив похожим образом каждый роутер распределенной сети, мы затем можем 
наблюдать в Cisco PT в режиме анимации периодическую рассылку роутерами 
(раз в 30 секунд собственных таблиц маршрутизации с помощью служебных пакетов
соседним rip-роутерам)
При переходе от роутера к роутеру пересылаемые таблицы метрика каждой записи
будет увеличиваться на 1.
Соседний роутер, получая такую таблицу, будет сравнивать её с собственной
таблицей маршрутизации.
Если сведения о какой-либо сети будут у него отсутствовать, то он добавит их 
из полученной таблицы в свою. Если он уже знает об определенной сети, он будет
сравнивать метрики маршрута к данной сети собственную с полученной. 
Если в полученной таблице метрика меньше, то есть маршрут короче, то он заменит 
собственную запись на полученную. В противном случае, оставит собственную.
Т.о. за определенное время каждый маршрутизатор получит информацию о каждой сети.

Протокол маршрутизатора rip имеет ограничение до 16 роутеров в распределенной сети.
Если каждая локальная сеть имеет одну и ту же маску, то достаточно использовать 
первую версию протокола rip, иначе записываемую RIPv1, в противном случае,
когда маски разные, необх. использовать RIPv2

    Виды адресации. IPv4-адресация.
Виды адресов:
1) ФИЗИЧЕСКИЕ (или MAC-адреса). Имеют 16тиричный формат. Прошиваются производителем в сетевую плату или в материнскую плату компьютера и являются неизменными. Для того, чтобы изменить MAC-адрес, необходимо заменить плату (или перепрошить ее). Также возможна подмена MAC-адреса с помощью устанавливаемого на компьютер ПО. MAC-адрес является действительным и идентифицирует узел только в границах локальной сети. Когда сообщение, проходя через распределенную сеть, попадает в новую локальную сеть, в его заголовке MAC-адрес меняется на новый (фото рисунка в телефоне). 
Примечание: границами между локальными сетями являются роутеры и, проходя через границу, сообщение меняет MAC-адрес назначения на новый (при этом IP-адрес назначения остается прежним).
То есть, MAC-адрес каждый раз идентифицирует очередной транзитный узел.
В третьей локальной сети MAC-адрес будет в итоге идентифицировать узел получателя (т.е. ПК2)
//рисунки в тетради по англу с обратной стороны
В конечном счете, цепочка адресов MAC1->MAC2->MAC3 идентифицирует и определяет маршрут до узла назначения.
2) ЛОГИЧЕСКИЕ (или IP-адреса). Задаются администратором или сервером и могут быть изменены.
Первый способ администратора называется статическим и назначаемые адреса назыв. 
статическими. Они выдаются в постоянное пользование и не могут меняться. Такие
адреса называются сервером, чтобы каждый клиент знал IP-адрес сервера.
По запросу DNS Назначаются адреса ..., граница в базе данных DNS-сервера. По запросу клиента
DNS-сервер сообщает его
Второй способ назначения, DHCP, также называется динамическим. Динамический 
адрес назначается клиенту и выдается им во временное пользование.  По истечении
определенного времени выданный адрес может быть освобожден и выдан DHCP-сервером
другому клиенту. Благодаря такому способу происходит экономия свободных
IP-адресов провайдера или у какой-либо организации. Клиент в отличии от сервера
не нуждается в постоянном IP-адресе посколько он первым производит обращение 
к какому-либо узлу, посылая запрос, ответ приходит на IP-адрес отправителя запроса,
и он находится в заголовке. 
IP-адрес однозначно определяет и идентифицирует узел в более широких границах 
чем MAC адрес, а именно распределенной WAN сети или глобальной сети
Третий адрес - доменные имена, который назначают сервером, в частности, web-сервером
для удобства обращения к ним посколько пользователю удобнее запоминать
символьное имя сервера чем его IP-адрес. Доменное имя имеет иерархическую структуру.
Каждый уровень этой структуры определяется словом, отделяется точкой
(например, yandex.ru, ru определяет вышележащую доменную зону, а слово yandex 
нижележащую)
На слово "ru" может заканчиваться множество имен, и говорят, что все имена которые
заканчиваются одинаково, лежат в одном домене/доменной зоне.
Для обращения к серверу клиент используемое доменное имя с помощью DNS-сервера
преобразовать в ip-адрес, для чего посылает запрос DNS-серверу, в котором 
указано доменное имя, которое пользователь, например, указал в адресной строке 
браузера. С таким же успехом он мог указать и ip-адрес в адресной строке, но
удобнее доменное имя. 
Сервер сделает сразу преобразование в ip-адрес в том случае если сервер с таким доменным
именем лежит в одном с ним домене. В противном случае, если веб-сервер лежит в
другом домене, у DNS-сервера есть ссылка на вышележащий домен.

            корневой домен
                 |
   (ru) ------> (.) <------ (com)
    ^                         ^
    |                         |
    |                         |
(yandex.ru)                  (yandex.com)


IPv4 - адресация. 32-битный формат, иерархическая структура
Делятся на 4 октета и 2 логические части - сетевая и хостовая. Хосты - узлы

Сетевая часть идентифицирует сеть, хостовая - узел сети. Размер сетевой и 
хостовой части зависит от класса сети адреса.

Для адресации в комп.сетях 3 класса: 
A: старшый октет 0 | десятичн: 1-126
B: 10  | 128-191
C: 110 | 192-223
Существуют еще 2 класса:
D: мультикаст адреса, объединяют группу устройств в сети по какому-то признаку,
например, маршрутизаторы, использующие протокол rip второй версии
E: резервный класс, резервные адреса для расширения глобальной комп.сети, 
не используется
Вместо использования E ввели IPv6, который имеет уже 128-битную структуру или
формат
Определив класс сети, можно сделать вывод о том какого размера будет сетевая 
часть адреса и хостовая
А: N.H.H.H
B: N.N.H.H
C: N.N.N.H
Таблицы маршрутизаторов и маршрутизации для определения маршрутка пакета

Широковещательные адреса (ну я знаю что это)
Хостовая и сетевая часть адреса не может состоять из 0 и 1, это служебные 
IP-адреса:
Хостовая-нули - адрес сети/подсети
Хост из единиц - широковещательный
Сеть 1, хост - 0 -> маска

Потом он упомянул деление на подсети, ок

192.168.1.0 на 4 подсети макс. размера

255.255.255.192 - маска подсети
192.168.1.0
192.168.1.64
192.168.1.128
192.168.1.192

F.F.F.00000000
F.F.F.01000000
F.F.F.10000000
F.F.F.11000000

255.255.255.11000000

255.255.255.11001010

Адрес сети:
192.168.1.00000000

192.168.1.00 000000


192.168.1.01 000000
192.168.1.64
255.255.255.192 - маска подсети
192.168.1.65 

192.168.1.10 000000
192.168.1.11 000000

255.255.255.11000000


Д/З (Тема - ) Деление на подсети с маской переменной длины
Рекомендовенная литература - IC ND том1, IC ND том2 
CISCO воевода(LUL)

DNS-протокол
Протокол системных имен

До появления компьютерных сетей эту задачу выполняли файлы под названием HOSTS,
расположенные на каждом клиенте. Каждый такой файл содержал БД, сопоставляющий 
доменные имена и IP-адреса
Чем больше размер такого файла тем дольше поиск в нем. При добавлении нового узла
в сеть необходимо было делать изменения в каждом файле на каждом клиенте внося 
новые данные
т.о. при росте сетей замедлялась работа процессов преобразования символьных имен
в IP-адреса поскольку увеличивались сами файлы HOSTS, время поиска в них, 
процесс их актуализации
Чтобы решить эту проблему отказались от преобр. символьных имен в IP адреса на
каждом клиенте. Перенесли эту задачу на сервер, доступный для каждого клиента, 
который хранил бы единую для всех клиентов БД Данный сервер - DNS-сервер 

При объединении локальных сетей в распределенные а затем глобальные было решено 
разделить доменные имена на зоны посколько одного DNS-сервера недостаточно.
Было решено также определить для каждой зоны полномочный / уполномоченный DNS-сервер,
один или несколько. Уполномоченный DNS-сервер - DNS-сервер, чья БД содержит все
имена домена в котором он располагается и за который он отвечает. Домен может
быть настолько крупным, что база DNS-сервера может не вмещать все имена из него. 
В таком случае в домене располагают второй, третий и так далее полномочный DNS-сервер,
которые явл-ся резервными  

Клиент по адресу полномочного DNS-сервера обращается к нему с запросом на
преобразование доменного имени в IP-адрес. Если доменное имя лежит в другом
домене то (доменную зону образуют имена которые заканчиваются одинаковым образом начиная с первой точки слева)
Если имя лежит в другом домене, то полномочный DNS-сервер не сможет выполнить
преобразования. В таком случае у него есть ссылка на вышележащий или 
нижележащий домен

(ВАЖНОЕ ОПРЕДЕЛЕНИЕ) Рекурсивный запрос - ...

Каждый DNS-сервер сохранит преобразования в кэше с целью не обращаться в 
дальнейшем с запросом на определение IP адреса соотв. имени, а сразу ответить


----------------
В комп сетях при инкапсуляции на 4м уровне потоки делятся на дискретные структуры данных (т.е. независимые друг от друга блоки). Известно три структуры данных в комп сетях: сначала на транспортном уровне формируются сегменты, в заголовок которых в качестве адреса помещаются порты (иначе говоря, номера портов). В заколовок помещаются два порта: порт отправителя и порт получателя. Под номер порта в заголовке отводится 16 бит (т.е. 2^16 = 65536 значений). Соответственно лежать номера могут в этом интервале. Номера идентифицируют, указывают или адресуют сетевые процессы на узле получателя (или иначе говоря - сетевые приложения). Каждый номер порта может иметь два состояния: закрыт и открыт. Если порт открыт, то сегмент передается ему успешно. Если порт закрыт, то сегмент отбрасывается. Номера портов делятся на две группы: централизованные значения (это от 1 до 1023) и локальные значения (все остальные). Назначения централизованно назначаемых портов заключаются в том, чтобы идентифицировать программные серверы, которым нужны статичные адреса, роль которых и выполняют порты данной группы. Данные порты схожи по своему назначению со статическими IP-адресами, которые тоже принято назначать аппаратным серверам. Т.е. статические IP-адреса и статические порты выполняют одну и ту же роль - идентифицируют сервера (ток разные сервера). Все остальные порты связаны динамическими IP-адресами и используются со стороны клиента.

На следующем - 3м - уровне сетевой модели сегмент упаковывается в новую структуру, которая наз-ся пакетом. В заголовок пакета принято записывать IP-адрес отправителя и IP-адрес получается (в качестве адреса пакета выступает IP-адрес). IP-адрес однозначно идентифицирует узел в распределенной сети (WAN), а, следовательно, указывает на конечный узел получателя в цепочке узлов, через который проходит до него. IP-адреса делятся на две группы (по способу назначения): статические и динамические. Статические IP-адреса выделяются в постоянное пользование, динамические - во временное пользование (выдаются в аренду считай).

Будучи сформированным на сетевом уровне пакет передается на нижележащий канальный уровень, где упаковывается в новую структуру по названием кадр. В заголовок пакета принято записывать MAC-адрес отправителя и MAC-адрес получается. MAC-адрес (в отличие от IP-адреса) однозначно идентифицирует узел в более узких границах, а именно - в границах локальной сети (LAN). Если получатель будет лежать в той же локальной сети, что и отправитель, то MAC-адрес назначения в заголовке кадра будет соответствовать тому же узлу, что и IP-адрес назначения в заголовке пакета. Если конечный узел назначения будет лежать в другой (т.е. удаленной) локальной сети, то в заголовке кадра будет записан MAC-адрес шлюза текущей локальной сети, а в заголовке пакета - IP-адрес конечного узла. Когда кадр пройдет через шлюз, МАС-адрес в его заголовке (а точнее, весь заголовок) у него сменится, и в новом заголовке будет новый МАС-адрес назначения, который будет взят из новой локальной сети. У пакета же заголовок останется прежним (и адрес назначения тоже), который будет указывать на конечный узел. 
Т.е., резюмируя вышесказанное, можно сказать, что при прохождении через границу между локальными сетями меняется МАС-адрес назначения и остается неизменным IP-адрес назначения. Новый МАС-адрес будет указывать на новый транзитный узел, которым будет являться роутер. IP же будет указывать по-прежнему на конечный узел. 
Цепочка МАС-адресов, получаемая при прохождении сообщения по распределенной сети, определяет маршрут доставки сообщения. 


                              +
                      +   +       +     +
                            +             +
              +     +   +       +     +     
                                +
(- ~ o)--==\
 (  ) /
 /  \

Проект распределенной сети с подсетями у которых маска имеет разную длину. 

По топологии звезда - не распределенная

            O              O
             \            /
              \ ________ /
               |        |
               |        |
               |        |
               |________|
              /          \
             /            \
            O              O

Распределенная сеть:

      <Облако>(подсеть1) - R1(роутер) - <Облако2> - R2 - <Облако3>

Пусть у данной распределенной сети адрес 150.183.0.0
У каждой подсети должна быть маска переменной длины

Пусть у П1 маска /18 (2 бит)
        П2 маска /19 (3 бит)
        П3 маска /20 (4 бит)

Задача составить адресный план и сконфигурировать такой проект
Начинаем с адреса подсети
  П1 150.183.00 000000.0  (150.183.0.0)
  Первое значение хостовой части: 000000.00000001
  Последнее:                      111111.11111110
  Хосты в П1: 150.183.0.1 - 150.183.63.254    (63 = 255 - 128 - 64) 
     
     150.183.000 00000.0 !НЕЛЬЗЯ!  
     150.183.001 00000.0 !НЕЛЬЗЯ! конфликтует с П1
  П2 150.183.010 00000.0  (150.183.64.0)
  Первое значение хостовой части: 000000.00000001
  Хосты в П1: 150.183.64.1 - 150.183.95.254    (95 = 255 - 128 - 32) 

  П3 150.183.0110 0000.0  (150.183.96.0)
  Первое значение хостовой части: 000000.00000001
  Хосты в П1: 150.183.96.1 - 150.183.111.254    (63 = 255 - 128 - 16)

Вот так строится адресный план подсетей с переменной длины. Главное чтобы не было
пересечения
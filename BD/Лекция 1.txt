Книги:
  Дейт - Введение в СУБД (начиная с 6 издания)
  Citforum.ru Пушников Кузнецов "Что-то там СУБД"
  Мартин Грубер - Введение в SQL
                - Понимание SQL
  Официальная документация Microsoft

История
  1968 год - первая СУБД от IBM
  1972 - соглашение чтобы БД были похожи

  Использование файловой системы в качестве БД было 1) небезопасным
  2) низкоизменяемой 3) не поддерживало многопользовательский доступ

  Для этого было создано СУБД

  Первые СУБД - иерархические: корневой узел, от которого идут потомки
  Университет - факультеты - кафедры - направления - группы

  БД - набор постоянных данных, которые используются прикладными системами
  для какого-либо предприятия

  Сетевые БД - разрешить более одного предка узлу

  1981 Кодд придумал реляционную БД
    Атрибуты - поля таблицы
    Кортеж - элемент
    Отношение - таблица
    Домен - ограничение атрибутов (вес, длина)

    1. "В отношений нет одинаковых кортежей"
    2. Кортежи не упорядочены
    3. Атрибуты не упорядочены
    4. Все значения атрибутов атомарны

    Существует пять нормальных форм. В рамках курса три

    1. Отношение R находится в 1НФ если оно удовлетворяет определению 2

    Определение 2. Отношение R находится в 1НАФ, если его утрибуты
    содержат атомарные значения

    Существуют два ограничения для любой реляционной БД:
      Целостность сущностей
      Целостность внешних ключей

    Существуют null-значения, которые можно в любые поля помещать
    null = null - НЕИЗВЕСТНО
    null != null - НЕИЗВЕСТНО
    null - значение не может быть в ключах

    Пусть дано отношение R. Подмножество атрибутов K - потенциальный ключ,
    если:
      1) В отношении R не может быть 2 различных кортежей с одинковым К
      2) Никакое подмножество в К не обладает свойством уникальности

  Внешние ключи
    Операции добавления, удаления, изменения могут привести к нарушению 
    ссылочной целостности. 

  Стратегии поддержания ссылочной целостности
    RESTRICT - не разрешать выполнение операции, приводящей к нарушению 
    ссылочной целостности
    CASCADE - резрешить выполнение требуемой операции, введя поправки в других
    отношениях так, чтобы не допустить нарушение ссылочной целостности и
    сохранить все имеющиеся связи
    --------Описанные ниже на практике плохи---------
    SET DEFAULT - неопределенное значение, появившееся в результате нарушения
    ссылочной целостности меняется на "стандартное" значение
    SET NULL - надо сначала разрешить null
    IGNORE - ну и ладно, ну и не надо

    Есть отличное решение - триггеры, срабатывающие сами при (добавлении, 
    обновлении, удалении). Их можно программировать на определенные действия. 
    Это может быть каскадным удалением, запись лога, обработка исключений

  Реляционная алгебра
    Язык SQL - смесь операторов реляционной алгебры и выражений, близких к
    английскому языку

    Объединение двух совместимых по типу отношений A и B называется отношение
      с тем же заголовком, что и у отношений A и B, и телом, состоящим из
      кортежей, принадлижащих или A, или B одновременно 
    Пересечение -==- и А и B одновременно
    Вычитание -==- А, но не B

    Выборка - из отношения A выбрать кортежи, удовл. условиям (+ AND, NOT,
      OR, XOR, ...)
    Проекция (выборка по определенным столбцам) - как выборка, только
      дает ограниченную информацию (Причем несколько совпадающих кортежей не будет) 
    Соединение отношение A и B по условию называется отношение (A TIMES B) where c.

    Естественное соединение JOIN
      Поставщики (Номер поставщика, Поставщик) JOIN
      Поставки (Номер поставщика, Номер товара, Кол-во) JOIN
      Товар (Номер товара, Товар)

      (Номер поставщика, Поставщик, Номер товара, Товар, Кол-во) 
    Если не нужны номера, можно с помощью проекции выбрать нужные атрибуты.

    select Поставщик.Name as "Поставщик", Tovar.Name as "Товар", Поставка.Kolvo
      as "Количество" from (Поставщик JOIN Поставка ON ID_P) JOIN Товар ON ID_T;
    Можно переписать без JOIN:
    select Поставщик.Name as "Поставщик", Tovar.Name as "Товар", Поставка.Kolvo
      as "Количество" from Поставщики, Поставки, Tovar WHERE 
      Поставки.ID_P = Поставщик.ID_P and
      Поставки.ID_T = Товар.ID_T;

    Деление - отношение B со своим заголовком вкладывается в A. Выбираются
      те кортежи, для которых все значения B содержатся в отношении A.
Никогда такого не было...
И я опоздал (ну зато покормил себя и черепашку)

Так, что тут происходит?
Списываю то что вижу с доски. Какие-то свойства

G = (V, E)
E с V x V

1. V = P U R
P ^ R = 0  (пересечение)
P = { p1, p2, ..., pn } - процессы
R = { R1, R2, ..., Rm } - ресурсы

2. двудольный по отношению к P и R
E с (P x R) U (R x P)
e = (pi, Rj) - запрос
e = (Rj, pi) - назначение

3. для любого Rj из R найдется Kj из Z такой что kj >= 0 - 
кол-во единиц ресурса Rj

4. Пусть |(a, b)| - число ребер от а к b
								___
4.1 sum(i)(|Rj, pi|) <= Kj, j = 1,m
									   ___		 ___
4.2 |(Rj, pi)| + |(pi, Rj)| <= Kj, i = 1,n , j = 1,m

При соблюдении этих условий граф "процесс-ресурс"

Запрос: 
	S 		  i
			S -> T
	pi

Приобретение: для любого Rj: E э (pi, Rj) => (pi, Rj) + sum(l)(|Rj, pl|) <= Kj

 __  		 __  		 __ 	   __
/P1\        /P1\        /P1\ 	  /P1\
\__/        \__/        \__/ 	  \__/
			 || 		 ^^ 		^
    		 vv 		 || 		|
 ___   		 ___ 		___ 	   ___
|   |  		|	| 	   |   |	  |   |
|___| R		|___| R	   |___| R    |___| R
  | 		  | 		 |	 		|
  v           v          v          v
  P2 		  P2 		 P2 		P2
       1 			1 		   1
  S --------> T --------> U ------> V
  	  запрос 	 приобр. 	 освоб.

  <E, p>, где E - множество состояний программы, каждое из которых - 
  				  двудольный граф процесс-ресурсов
  E = {S, T, U, ...} 
  p = {p1, p2, ..., pn}
  pi: E -> {E}
  {E} - мн-во всех подмножеств E

 	i
  S -> T <==> pi(S) э T
 	*									 i
  S -> T <==> (s=T) V (найдется pi из P:S->T) 
  								 i 	   *
  V (Найдется pi из P, U из E : S->U, U->T)

  Ситуации: 
 o pi заблокирован
  pi(S) = 0 		S - тупиковое

 о pi в тупике 
 			   *
 для любого Т:S->T => pi(T) = 0 	*
S - безопасное еслидля любого  T : S->T, Т не тупик

	Теорема:
  Граф процесс-ресурс T для состояния программы с ресурсами единичной ёмкости 
  указывает на состояние тупика тогда и только тогда когда он содержит цикл
